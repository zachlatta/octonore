{"name":"Octonore","tagline":"An octolicious wrapper around Github's gitignore template API.","body":"Install with the following:\r\n\r\n\t$ gem install octonore\r\n\r\n\r\nUsage\r\n-----\r\n\r\nTo get a gitignore template you first need to instantiate it.\r\n\r\n    >> c_template = Octonore::Template.new('C')\r\n    => #<Octonore::Template:0x007fe65b8b2420 @name=\"C\", @source=\"# Obj\r\n    ect files\\n*.o\\n\\n# Libraries\\n*.lib\\n*.a\\n\\n# Shared objects (inc\r\n    . Windows DLLs)\\n*.dll\\n*.so\\n*.so.*\\n*.dylib\\n\\n# Executables\\n*.\r\n    exe\\n*.out\\n*.app\\n\">\r\n\r\nTo get the template's source code, you can call its `source` accessor.\r\n\r\n    >> c_template.source\r\n    => \"# Object files\\n*.o\\n\\n# Libraries\\n*.lib\\n*.a\\n\\n# Shared obj\r\n    ects (inc. Windows DLLs)\\n*.dll\\n*.so\\n*.so.*\\n*.dylib\\n\\n# Execut\r\n    ables\\n*.exe\\n*.out\\n*.app\\n\"\r\n\r\n\r\nYou can also get the template's name with the `name` accessor.\r\n\r\n    >> c_template.name\r\n    => \"C\"\r\n\r\nYou can reload the template's source from Github with the `update` method.\r\n\r\n    >> c_template.update\r\n    => \"# Object files\\n*.o\\n\\n# Libraries\\n*.lib\\n*.a\\n\\n# Shared obj\r\n    ects (inc. Windows DLLs)\\n*.dll\\n*.so\\n*.so.*\\n*.dylib\\n\\n# Execut\r\n    ables\\n*.exe\\n*.out\\n*.app\\n\"\r\n\r\n\r\n### Example Program\r\n\r\nThe following program asks the user for the name of a gitignore template. It then writes the gitignore to a file ending in `.gitignore`. If the user enters `Java`, then it will write the Java gitignore template to `java.gitignore` in the current directory.\r\n\r\n```ruby\r\nrequire 'octonore'\r\n\r\nbegin\r\n  print \"Enter the name of a gitignore template (case sensitive): \"\r\n  template = Octonore::Template.new(gets.strip)\r\n  \r\n  File.open(\"#{template.name.downcase}.gitignore\", 'w') { |file|\r\n          file.write(template.source) }\r\nrescue GitignoreTemplateNotFoundError => e\r\n  puts e.message\r\nend\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}